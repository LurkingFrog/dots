#! /bin/zsh

export HISTFILE=~/.zsh_history
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
export HISTTIMEFORMAT="[%F %T] "
setopt HIST_IGNORE_ALL_DUPS
setopt INC_APPEND_HISTORY


# Set the path
PATH=$HOME/bin
PATH=$PATH:$HOME/.cargo/bin
PATH=$PATH:$JAVA_HOME
PATH=$PATH:/usr/local/bin
PATH=$PATH:/usr/local/sbin
PATH=$PATH:/usr/bin
PATH=$PATH::/sbin
PATH=$PATH:/bin
PATH=$PATH:/snap/bin
PATH=$PATH:/opt/cask/bin
# Add the scala version manager
PATH=$PATH:$HOME/.local/share/coursier/bin


# Opam recommended variables
test -r $HOME/.opam/opam-init/init.zsh \
    && . $HOME/.opam/opam-init/init.zsh > /dev/null 2> /dev/null \
    || true

# This is used in development docker containers
export USER_ID=$(id -u):$(id -g)

# Add JAVA_HOME
export JAVA_HOME=$(dirname $(readlink -f `which java`))/..


# Add javascript/node's home and load
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# Node keeps moving this crap around and losing by global binaries
# Maybe this is fixed by using nvm
if [ -e $HOME/dots/node/node_modules/.bin ]
then
  PATH=$PATH:$HOME/dots/node/node_modules/.bin
fi

if [ -e /usr/lib/node_modules/DotsGlobalPackages/node_modules/.bin ]
then
  PATH=$PATH:/usr/lib/node_modules/DotsGlobalPackages/node_modules/.bin
fi

# Start up NVM
export NVM_DIR="${HOME}/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh" # This loads nvm

export PATH=$PATH

ZSH=$HOME/.oh-my-zsh
ZSH_THEME="frog"

plugins=( \
  history \
  ubuntu cp rsync command-not-found dircycle taskwarrior \
  rust \
  git  git-extras \
  npm nvm node \
  python pylint pip pep8 \
  gradle \
  docker docker-compose kubectl\
  )

source $ZSH/oh-my-zsh.sh

export EDITOR=/usr/bin/emacs
export BOOT_DC=($(command -v docker-compose) -f ~/dots/docker/boot/docker-compose.yml)


# Clean up exited docker containers
alias dclr="docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm"
alias dps="docker ps -a"

# List folder sizes in the current directory
alias dux="du -h --max-depth=1 | sort -h"
alias sdux="sudo du -h --max-depth=1 | sort -h"

#
alias k8s_token="kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}' | kubectl -n kubernetes-dashboard describe secret"

alias lsa="ls -alrth"

alias pip-update="pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U"

# Bring all the installed components up to date
alias shup="~/dots/update.sh"

alias gh="cd \$(git rev-parse --show-toplevel)"

# Debug a local webpack instance
# https://indepth.dev/posts/1166/this-will-make-you-more-efficient-at-debugging-webpack-unspecified-build-errors
alias dlwpc="node --inspect-brk node_modules/webpack/bin/webpack.js"

# tabtab source for electron-forge package
# uninstall by removing these lines or running `tabtab uninstall electron-forge`
# [[ -f /home/dfogelson/.nvm/versions/node/v10.15.3/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh ]] && . /home/dfogelson/.nvm/versions/node/v10.15.3/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
